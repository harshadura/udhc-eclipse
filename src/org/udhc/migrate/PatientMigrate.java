package org.udhc.migrate;

import java.io.Console;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Scanner;

import org.udhc.gen.DbCon;
import org.udhc.gen.models.Report;

public class PatientMigrate {
	
	
	public InputStream getImage() {
		return image;
	}

	public void setImage(InputStream image) {
		this.image = image;
	}

	public int getTopic_id() {
		return topic_id;
	}

	public void setTopic_id(int topic_id) {
		this.topic_id = topic_id;
	}

	public String getFile_name() {
		return file_name;
	}

	public void setFile_name(String file_name) {
		this.file_name = file_name;
	}

	InputStream image;
	int topic_id;
	String file_name;
	int report_id;

	public int getReport_id() {
		return report_id;
	}

	public void setReport_id(int report_id) {
		this.report_id = report_id;
	}

	
	
	// called on AJAX server request
	public static PatientMigrate getReportByID(int report_id)
	{
		PatientMigrate health_file_report=new PatientMigrate();
		// connect to source DB
		
		
        Connection con;
        
       try{
                con=SourceDB.getDbConnection();
                ResultSet rst=null;
                Statement stmt=null;               stmt=con.createStatement();
                rst=stmt.executeQuery("select file,topic_id,file_name from health_files where idhealth_files = "+report_id);
                while(rst.next()){
                	health_file_report.setImage(rst.getBinaryStream("file"));
                	health_file_report.setTopic_id(rst.getInt("topic_id"));  // int or string?
                	health_file_report.setFile_name(rst.getString("file_name"));
                	health_file_report.setReport_id(report_id);
                	
                	break;
                }
                SourceDB.closeConnection(con);
                
        }
        
        catch(Exception e)
        {
            System.out.println(e.toString());
        }
        
       
       return health_file_report;
		// close connection
	}
	
	public static int insertHealthFile(PatientMigrate report)
	{//connect to destination DB
		
		  int updateQuery =0 ;
		 try{
		        
		        Connection conn= DestinationDB.getDbConnection();
		        
		                PreparedStatement pstatement = null;

		                
		                // since it's migration, we are also inserting the auto-incremented field
		                
		                String queryString = "INSERT INTO health_files(file,topic_id,file_name,idhealth_files) VALUES (?,?,?,?)";
		                pstatement = conn.prepareStatement(queryString ,pstatement.RETURN_GENERATED_KEYS);
		                
		                pstatement.setBlob(1,report.image);       
		                pstatement.setInt(2, report.topic_id);  
		                pstatement.setString(3, report.file_name);
		                pstatement.setInt(4, report.report_id);
		                
		                        
		                
		                updateQuery = pstatement.executeUpdate();
		                
		                
		                /*
		                 * NO autogenerated keys
		                 * 
		                 
		                ResultSet my_keys = pstatement.getGeneratedKeys();
		                while(my_keys.next())
		                {
		                	
		                	return my_keys.getInt(1)+"";
		                	
		                }
		                */
		                DestinationDB.closeConnection(conn, pstatement);
		                
		        }
		        catch(Exception e)
		        {
		            System.out.println(e.toString());
		        }
		        
		        
		        
		        return updateQuery;
		
		
 		
	}
	
	
	// will be used as source reference and displayed on the webpage - will a "migrate" button beside it.
	public static String getImagesListAndInfo()
    {
        ArrayList<Report> list=new ArrayList<Report>();
        Connection con;
        String all_ids="";
       try{
                con=SourceDB.getDbConnection();

                ResultSet rst=null;
                Statement stmt=null;
                
                stmt=con.createStatement();
                rst=stmt.executeQuery("select topic_id ,idhealth_files, file_name from health_files order by idhealth_files asc");// where topic_id = "+topic_id);
                while(rst.next()){
                    Report report = new Report(rst.getInt("idhealth_files")+"",rst.getString("file_name"));
                    list.add(report);
                    all_ids+=report.getReport_id()+",";
                    System.out.println("Topic_id : "+rst.getInt("topic_id")+" Image/Report ID : "+report.getReport_id()+"  Description:"+report.getDescription() );
                    //list.add(rst.getInt("idhealth_files"));     
                }
                SourceDB.closeConnection(con);
                
                
        }
        
        
        
        catch(Exception e)
        {
            System.out.println(e.toString());
        }
        
        
        return all_ids;
        
        
    }
   
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

			
		String id_array[] = getImagesListAndInfo().split(",");
		
		/*
		for( int i =0 ;i < id_array.length ; i++)
		{
			System.out.println(id_array[i]+",");
		}

		for( int i =0 ; i<id_array.length -1; i++)
		{
			int report_id = Integer.parseInt(id_array[i]);
			System.out.println("***For report id : "+report_id+" ***");
			
			PatientMigrate health_file = new PatientMigrate();
			health_file = PatientMigrate.getReportByID(report_id);
			
			System.out.println("Retrieved ---- Report ID :"+health_file.getReport_id()+", Topic id:"+health_file.getTopic_id());

			System.out.println("Inserted ---- Status for "+report_id+" : "+ PatientMigrate.insertHealthFile(health_file));
			
			try {
				Thread.sleep(5000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
		
		
		int report_id;
		System.out.println("Enter report id");
		
		Scanner in = new Scanner(System.in);

		report_id = in.nextInt();
		
		PatientMigrate health_file = new PatientMigrate();
		health_file = PatientMigrate.getReportByID(report_id);
		
		
		// check source extract
		System.out.println("Retrieved ---- Report ID :"+health_file.getReport_id()+", Topic id:"+health_file.getTopic_id());
		System.out.println("Inserted ---- Status for "+report_id+" : "+ PatientMigrate.insertHealthFile(health_file));
		

		//getImagesListAndInfo();
		 * 
		 */
	}

}
